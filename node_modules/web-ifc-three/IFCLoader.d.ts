<<<<<<< HEAD
import { IFCManager } from './IFC/components/IFCManager';
import { Loader, LoadingManager } from 'three';
import { IFCModel } from './IFC/components/IFCModel';
declare class IFCLoader extends Loader {
    ifcManager: IFCManager;
    private onProgress?;
    constructor(manager?: LoadingManager);
    load(url: any, onLoad: (ifc: IFCModel) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void): void;
    parse(buffer: ArrayBuffer): Promise<IFCModel>;
}
export { IFCLoader };
=======
import { IFCManager } from './IFC/components/IFCManager';
import { Loader, LoadingManager } from 'three';
import { IFCModel } from './IFC/components/IFCModel';
declare class IFCLoader extends Loader {
    ifcManager: IFCManager;
    private onProgress?;
    constructor(manager?: LoadingManager);
    load(url: any, onLoad: (ifc: IFCModel) => void, onProgress?: (event: ProgressEvent) => void, onError?: (event: ErrorEvent) => void): void;
    parse(buffer: ArrayBuffer): Promise<IFCModel>;
}
export { IFCLoader };
>>>>>>> af63443f9b52d7b96a2c7c83c00a302fee0de6a4
