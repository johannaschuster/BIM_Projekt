<<<<<<< HEAD
import { IfcEventData, IfcWorkerAPI, PropertyWorkerAPI, WorkerAPIs } from '../BaseDefinitions';
import { PropertyManager } from '../../components/properties/PropertyManager';
export declare class PropertyWorker implements PropertyWorkerAPI {
    private worker;
    properties?: PropertyManager;
    API: WorkerAPIs;
    constructor(worker: IfcWorkerAPI);
    initializeProperties(): void;
    getHeaderLine(data: IfcEventData): Promise<void>;
    getAllItemsOfType(data: IfcEventData): Promise<void>;
    getItemProperties(data: IfcEventData): Promise<void>;
    getMaterialsProperties(data: IfcEventData): Promise<void>;
    getPropertySets(data: IfcEventData): Promise<void>;
    getSpatialStructure(data: IfcEventData): Promise<void>;
    getTypeProperties(data: IfcEventData): Promise<void>;
}
=======
import { IfcEventData, IfcWorkerAPI, PropertyWorkerAPI, WorkerAPIs } from '../BaseDefinitions';
import { PropertyManager } from '../../components/properties/PropertyManager';
export declare class PropertyWorker implements PropertyWorkerAPI {
    private worker;
    properties?: PropertyManager;
    API: WorkerAPIs;
    constructor(worker: IfcWorkerAPI);
    initializeProperties(): void;
    getHeaderLine(data: IfcEventData): Promise<void>;
    getAllItemsOfType(data: IfcEventData): Promise<void>;
    getItemProperties(data: IfcEventData): Promise<void>;
    getMaterialsProperties(data: IfcEventData): Promise<void>;
    getPropertySets(data: IfcEventData): Promise<void>;
    getSpatialStructure(data: IfcEventData): Promise<void>;
    getTypeProperties(data: IfcEventData): Promise<void>;
}
>>>>>>> af63443f9b52d7b96a2c7c83c00a302fee0de6a4
